[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "What I’ve been learning",
    "section": "",
    "text": "Testing with knitr engine\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nJan 8, 2025\n\n\nJeffrey Huang\n\n\n\n\n\n\n\n\n\n\n\n\nUsing a conda environment with Quarto markdown\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nJan 7, 2025\n\n\nJeffrey Huang\n\n\n\n\n\n\n\n\n\n\n\n\nJupyter Notebook Test\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nJan 5, 2025\n\n\nJeffrey Huang\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nJan 4, 2025\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nJan 1, 2025\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\nlibrary(astsa)\nprint(\"test cell\")\n\n[1] \"test cell\""
  },
  {
    "objectID": "posts/1-05-2025/index.html",
    "href": "posts/1-05-2025/index.html",
    "title": "Jupyter Notebook Test",
    "section": "",
    "text": "This is a test of rendering Jupyter notebooks to a Quarto website.\n\nimport pandas as pd\nimport numpy as np\n\n\ndf = pd.DataFrame({\"a\":[1, 2, 3, 4], \"b\":[0, 0, 1, 0]})\ndf\n\n\n\n\n\n\n\n\na\nb\n\n\n\n\n0\n1\n0\n\n\n1\n2\n0\n\n\n2\n3\n1\n\n\n3\n4\n0"
  },
  {
    "objectID": "posts/1-05-2025/index.html#hello-world",
    "href": "posts/1-05-2025/index.html#hello-world",
    "title": "Jupyter Notebook Test",
    "section": "",
    "text": "This is a test of rendering Jupyter notebooks to a Quarto website.\n\nimport pandas as pd\nimport numpy as np\n\n\ndf = pd.DataFrame({\"a\":[1, 2, 3, 4], \"b\":[0, 0, 1, 0]})\ndf\n\n\n\n\n\n\n\n\na\nb\n\n\n\n\n0\n1\n0\n\n\n1\n2\n0\n\n\n2\n3\n1\n\n\n3\n4\n0"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/1-08-2025/index.html",
    "href": "posts/1-08-2025/index.html",
    "title": "Testing with knitr engine",
    "section": "",
    "text": "R.home()\n\n[1] \"C:/Users/jrh25/miniforge3/envs/datasci-env/lib/R\"\n\n.libPaths()\n\n[1] \"C:/Users/jrh25/miniforge3/envs/datasci-env/Lib/R/library\"\n\n\n\nR.home()\n\n[1] \"C:/Users/jrh25/miniforge3/envs/datasci-env/lib/R\"\n\n\n\nlibrary(reticulate)\npy_config()\n\npython:         C:/Users/jrh25/miniforge3/envs/datasci-env/python.exe\nlibpython:      C:/Users/jrh25/miniforge3/envs/datasci-env/python312.dll\npythonhome:     C:/Users/jrh25/miniforge3/envs/datasci-env\nversion:        3.12.8 | packaged by conda-forge | (main, Dec  5 2024, 14:06:27) [MSC v.1942 64 bit (AMD64)]\nArchitecture:   64bit\nnumpy:          C:/Users/jrh25/miniforge3/envs/datasci-env/Lib/site-packages/numpy\nnumpy_version:  1.26.4\n\nNOTE: Python version was forced by use_python() function\n\ngetwd()\n\n[1] \"C:/Users/jrh25/Desktop/personal-site/posts/1-08-2025\"\n\n\n\nimport pandas as pd\nimport numpy as np\n\narr = np.array([1, 2, 3, 4, 5])\narr\n\narray([1, 2, 3, 4, 5])\n\n\n\narr &lt;- py$arr\nprint(arr)\n\n[1] 1 2 3 4 5\n\n\n\nr['arr']\n\narray([1., 2., 3., 4., 5.])\n\nr.arr\n\narray([1., 2., 3., 4., 5.])"
  },
  {
    "objectID": "posts/1-07-2025/index.html",
    "href": "posts/1-07-2025/index.html",
    "title": "Using a conda environment with Quarto markdown",
    "section": "",
    "text": "This is a post with executable code.\n\nlibrary(tidyverse)\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.2 --\nv ggplot2 3.4.2     v purrr   1.0.2\nv tibble  3.2.1     v dplyr   1.1.4\nv tidyr   1.3.1     v stringr 1.5.0\nv readr   2.1.5     v forcats 1.0.0\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\nlibrary(forecast)\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\nlibrary(GGally)\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\nprint(\"test cells\")\n\n[1] \"test cells\"\n\n\n\n\nRows: 45312 Columns: 9\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\nchr (2): day, class\ndbl (7): date, period, nswprice, nswdemand, vicprice, vicdemand, transfer\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nenergy %&gt;% slice_head(n=5)\n\n# A tibble: 5 x 9\n   date day   period nswprice nswdemand vicprice vicdemand transfer class  \n  &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;  \n1     0 b'2'  0        0.0564     0.439  0.00347     0.423    0.415 b'UP'  \n2     0 b'2'  0.0213   0.0517     0.415  0.00347     0.423    0.415 b'UP'  \n3     0 b'2'  0.0426   0.0515     0.385  0.00347     0.423    0.415 b'UP'  \n4     0 b'2'  0.0638   0.0455     0.315  0.00347     0.423    0.415 b'UP'  \n5     0 b'2'  0.0851   0.0425     0.251  0.00347     0.423    0.415 b'DOWN'"
  }
]