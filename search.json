[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog",
    "section": "",
    "text": "Benchmarking Model Performance on Electricity Demand Forecasting\n\n\n\n\n\n\ntime-series\n\n\nforecasting\n\n\n\n\n\n\n\n\n\nJan 20, 2025\n\n\nJeffrey Huang\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/2025-1-20/index.html",
    "href": "posts/2025-1-20/index.html",
    "title": "Benchmarking Model Performance on Electricity Demand Forecasting",
    "section": "",
    "text": "Forecasting electricity demand is an extremely relevant problem for energy providers, as it influences not only the cost of day to day operations but also the timeliness and effectiveness of preparing for extreme weather conditions. Additionally, providers have to account for variations in geographic locations, further increasing the complexity of forecasting tasks.\nIn this blog post, I aim to explore the applications and performance of several forecasting methods for this task. I’m specifically using the Australian New South Wales Electricity Market dataset, which features the electricity price and demand of New South Wales and Victoria, as well as the amount transferred between the two states.\nThe data contains 45,312 instances for the days from May 7, 1996 to December 5, 1998, with observations recorded every half hour in each 24 hour period. I account for this granularity in my approach.\n\nelectricity.head()\n\n\n\n\n\n\n\n\ndate\nday\nperiod\nnswprice\nnswdemand\nvicprice\nvicdemand\ntransfer\nclass\n\n\n\n\n0\n0.0\n2\n0.000000\n0.056443\n0.439155\n0.003467\n0.422915\n0.414912\nUP\n\n\n1\n0.0\n2\n0.021277\n0.051699\n0.415055\n0.003467\n0.422915\n0.414912\nUP\n\n\n2\n0.0\n2\n0.042553\n0.051489\n0.385004\n0.003467\n0.422915\n0.414912\nUP\n\n\n3\n0.0\n2\n0.063830\n0.045485\n0.314639\n0.003467\n0.422915\n0.414912\nUP\n\n\n4\n0.0\n2\n0.085106\n0.042482\n0.251116\n0.003467\n0.422915\n0.414912\nDOWN\n\n\n\n\n\n\n\nThe data has a very fine level of granularity, making for a highly dense time series plot for the entire series. Right off the bat we can observe a longer term seasonality in the trend line of the graph.\n\nfig, ax = plot_series(electricity['nswdemand'])\nfig, ax = plot_series(electricity['nswprice'])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlotting a couple smaller length sections of the series (in intervals of 1000 observations) lets us see smaller scale seasonalities, which are immediately discernable.\n\nfig, ax = plot_series(electricity['nswdemand'][0:1000])\n\n\n\n\n\n\n\n\n\nfig, ax = plot_series(electricity['nswdemand'][20000:21000])\n\n\n\n\n\n\n\n\nThe magnitude of seasonal variations doesn’t appear to be influenced by the length of the time series, so I assume an additive decomposition to be the most appropriate such that\n\\(y_t = S_t + T_t + R_t\\)\nwhere data is decomposed into seasonal, trend, and remainder components respectively.\n\ntransformer = Deseasonalizer(model='additive')\ndecomposed = transformer.fit_transform(electricity['nswdemand'][0:1000])\nfig, ax = plot_series(decomposed)\n\n\n\n\n\n\n\n\n\n\n\n0       0.439155\n1       0.415055\n2       0.385004\n3       0.314639\n4       0.251116\n          ...   \n9995    0.098929\n9996    0.124665\n9997    0.165427\n9998    0.215412\n9999    0.250967\nName: nswdemand, Length: 10000, dtype: float64"
  }
]