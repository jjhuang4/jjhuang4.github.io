{
  "hash": "48aeeb56e88244ddaae4907c520cdeee",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Testing with knitr engine\"\nauthor: \"Jeffrey Huang\"\ndate: \"2025-01-08\"\ncategories: [news, code, analysis]\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nR.home()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"C:/Users/jrh25/miniforge3/envs/datasci-env/lib/R\"\n```\n\n\n:::\n\n```{.r .cell-code}\n.libPaths()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"C:/Users/jrh25/miniforge3/envs/datasci-env/Lib/R/library\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nR.home()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"C:/Users/jrh25/miniforge3/envs/datasci-env/lib/R\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reticulate)\npy_config()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npython:         C:/Users/jrh25/miniforge3/envs/datasci-env/python.exe\nlibpython:      C:/Users/jrh25/miniforge3/envs/datasci-env/python312.dll\npythonhome:     C:/Users/jrh25/miniforge3/envs/datasci-env\nversion:        3.12.8 | packaged by conda-forge | (main, Dec  5 2024, 14:06:27) [MSC v.1942 64 bit (AMD64)]\nArchitecture:   64bit\nnumpy:          C:/Users/jrh25/miniforge3/envs/datasci-env/Lib/site-packages/numpy\nnumpy_version:  1.26.4\n\nNOTE: Python version was forced by use_python() function\n```\n\n\n:::\n\n```{.r .cell-code}\ngetwd()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"C:/Users/jrh25/Desktop/personal-site/posts/1-08-2025\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd\nimport numpy as np\n\narr = np.array([1, 2, 3, 4, 5])\narr\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\narray([1, 2, 3, 4, 5])\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\narr <- py$arr\nprint(arr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 2 3 4 5\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nr['arr']\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\narray([1., 2., 3., 4., 5.])\n```\n\n\n:::\n\n```{.python .cell-code}\nr.arr\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\narray([1., 2., 3., 4., 5.])\n```\n\n\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}